"use strict";(self.webpackChunk_1_inch_docs=self.webpackChunk_1_inch_docs||[]).push([[4602],{3905:function(e,r,n){n.d(r,{Zo:function(){return s},kt:function(){return m}});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function c(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?c(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function a(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},c=Object.keys(e);for(t=0;t<c.length;t++)n=c[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)n=c[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=t.createContext({}),d=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},s=function(e){var r=d(e.components);return t.createElement(l.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,c=e.originalType,l=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),p=d(n),m=o,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||c;return n?t.createElement(f,i(i({ref:r},s),{},{components:n})):t.createElement(f,i({ref:r},s))}));function m(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var c=n.length,i=new Array(c);i[0]=p;var a={};for(var l in r)hasOwnProperty.call(r,l)&&(a[l]=r[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var d=2;d<c;d++)i[d]=n[d];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},96780:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return s},default:function(){return p}});var t=n(87462),o=n(63366),c=(n(67294),n(3905)),i=["components"],a={sidebar_position:7},l="Nonce",d={unversionedId:"limit-order-protocol/guide/nonce",id:"limit-order-protocol/guide/nonce",isDocsHomePage:!1,title:"Nonce",description:"LimitOrderProtocolFacade.nonce() - returns the nonce of the current wallet address",source:"@site/docs/limit-order-protocol/guide/nonce.md",sourceDirName:"limit-order-protocol/guide",slug:"/limit-order-protocol/guide/nonce",permalink:"/docs/limit-order-protocol/guide/nonce",editUrl:"https://github.com/1inch/1inch-docs/edit/master/docs/limit-order-protocol/guide/nonce.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Cancel all limit orders",permalink:"/docs/limit-order-protocol/guide/cancel-all-limit-orders"},next:{title:"Predicate",permalink:"/docs/limit-order-protocol/guide/predicate"}},s=[{value:"Example:",id:"example",children:[]}],u={toc:s};function p(e){var r=e.components,n=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"nonce"},"Nonce"),(0,c.kt)("p",null,(0,c.kt)("inlineCode",{parentName:"p"},"LimitOrderProtocolFacade.nonce()")," - returns the nonce of the current wallet address",(0,c.kt)("br",{parentName:"p"}),"\n",(0,c.kt)("inlineCode",{parentName:"p"},"LimitOrderProtocolFacade.advanceNonce(count: number)")," - increases the nonce by the count",(0,c.kt)("br",{parentName:"p"}),"\n",(0,c.kt)("inlineCode",{parentName:"p"},"LimitOrderProtocolFacade.increaseNonce()")," - increases the nonce by 1"),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Nonce")," - this is the so-called ",(0,c.kt)("inlineCode",{parentName:"p"},"series")," of limit orders.",(0,c.kt)("br",{parentName:"p"}),"\n","The nonce is useful when you need to create a bunch of limit orders with the ability to cancel them all later."),(0,c.kt)("h2",{id:"example"},"Example:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-typescript"},"import Web3 from 'web3';\nimport {\n    LimitOrderProtocolFacade,\n    LimitOrderPredicateBuilder,\n    Web3ProviderConnector\n} from '@1inch/limit-order-protocol';\n\nconst walletAddress = '0xhhh...';\nconst contractAddress = '0x5fa31604fc5dcebfcac2481f9fa59d174126e5e6';\nconst chainId = 1;\n\nconst connector = new Web3ProviderConnector(new Web3('...'));\nconst limitOrderProtocolFacade = new LimitOrderProtocolFacade(contractAddress, connector);\nconst limitOrderPredicateBuilder = new LimitOrderPredicateBuilder(\n    limitOrderProtocolFacade\n);\nconst limitOrderBuilder = new LimitOrderBuilder(\n    contractAddress,\n    chainId,\n    connector\n);\n\n// Get the current nonce\nconst nonce = await limitOrderProtocolFacade.nonce(contractAddress);\n\n// Create a limit order with nonceEquals predicate\nconst predicate = limitOrderPredicateBuilder.nonceEquals(walletAddress, nonce);\nconst limitOrder = limitOrderBuilder.buildLimitOrder({\n    ...,\n    predicate\n});\n\n// Cancel all orders by advance nonce\nconst cancelAllOrdersCallData = limitOrderProtocolFacade.advanceNonce();\nsendTransaction({\n    from: walletAddress,\n    gas: 210_000, // Set your gas limit\n    gasPrice: 40000, // Set your gas price\n    to: contractAddress,\n    data: cancelAllOrdersCallData,\n});\n")))}p.isMDXComponent=!0}}]);